Explicação dos Códigos
1. Página de Serviços (Servicos.js)
"A página de serviços é onde listamos todos os serviços disponíveis para os usuários agendarem. Aqui usamos um array chamado servicos para armazenar os dados de cada serviço, como o nome e a descrição. Esse array é exibido na tela utilizando a função map, que percorre os serviços e renderiza um item da lista (<li>) para cada um deles. No final, adicionamos um botão para agendar o serviço. A estrutura é simples, mas podemos torná-la mais dinâmica conectando a uma API no futuro."

2. Página de Login (Login.js)
"Essa é a página de login, onde os usuários inserem o e-mail e a senha para acessar suas contas. Usei os hooks useState para controlar o estado dos campos de entrada. Quando o usuário clica no botão 'Entrar', a função handleLogin é chamada e impede o comportamento padrão do formulário (recarregar a página). Por enquanto, ela só imprime os dados no console, mas mais tarde podemos integrar um backend para autenticação real."

3. Página de Cadastro (Cadastro.js)
"Na página de cadastro, a lógica é semelhante à do login, mas aqui os usuários preenchem nome, e-mail e senha para criar uma conta. Também usei useState para armazenar os valores desses campos e a função handleSubmit para processar o envio do formulário. Para melhorar a experiência do usuário, adicionei estilos no arquivo CSS (Cadastro.css), como centralização dos elementos, espaçamento e cores amigáveis. Assim, a página fica mais organizada e intuitiva."

4. Página de Dashboard (Dashboard.js)
"A dashboard é a área do usuário. Aqui, podemos exibir informações como o nome do usuário e os serviços contratados. O código ainda é estático, mas podemos usar essa base para futuramente exibir dados reais vindos de uma API ou banco de dados. É uma página ideal para personalizar a experiência do usuário, como mostrar saudações e um histórico de agendamentos."

CSS (Estilos)
"No código CSS, cuidamos da aparência do site. Usei uma abordagem simples e organizada, dividindo os estilos por classes. Por exemplo, na classe .cadastro, alinhei os elementos ao centro e adicionei espaçamentos nos campos para melhorar a usabilidade. Além disso, usei animações no estilo geral do site, como a rotação infinita da logo na classe .App-logo. Essa atenção aos detalhes dá uma aparência mais profissional e amigável."

